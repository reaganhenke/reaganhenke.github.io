"use strict";var precacheConfig=[["/index.html","99d98a18bae6e7a669684e0aa5258f85"],["/static/css/main.e35dcdf0.css","1c159ebaf02d27668d2ec4ff1c425e6a"],["/static/js/main.3183f838.js","c8e64d5a651afc3c4800a06b68bbf458"],["/static/media/8bitclips.fd10d315.mp4","fd10d3158f752699a6cc44f88f424c95"],["/static/media/AMAC_cover.585db969.jpg","585db969397d8d704675fb013b141123"],["/static/media/amac1.0316509e.jpg","0316509ef47ba2d430b36de882044e17"],["/static/media/amac2.9e16c688.jpg","9e16c688ab60ddacb916559cfec396ce"],["/static/media/logo_grid.422f5678.png","422f56780330e5d1f5d822dd6c6decc9"],["/static/media/prefsort_demo.0fbc5191.png","0fbc519186c27d8860ec900277723bcf"],["/static/media/profilepicture.5d6ae97a.png","5d6ae97a04fa017f653439edc04c54aa"],["/static/media/recruitposter.6032db98.png","6032db983878b598f59c9ddeb3334b4f"],["/static/media/resume.e1ba8487.pdf","e1ba84870a78582201c5f829e49f11b9"],["/static/media/resume_scroll.24766af3.jpg","24766af3f0b64888d53e644058b96634"],["/static/media/rhbrand.deb5c400.png","deb5c400b2d7415fb01d81b9e5d4dea3"],["/static/media/shirt.384e2064.jpg","384e2064aac56b5e596f2bfc71d5f11f"],["/static/media/spambot_demo.aba968a0.png","aba968a01ef9b510ddc69a6f77bcec9b"],["/static/media/tablecloth.600562b5.jpg","600562b56382e049ccf21aa95b8a31bc"],["/static/media/treblealumni.7ffb4d60.jpg","7ffb4d60b0fb2b219c424b044f928faf"],["/static/media/treblecrop.b61ab9e9.jpg","b61ab9e9e5256aca702d672fe622d1ed"],["/static/media/websitebackground3.07c0ab5c.png","07c0ab5c31593b23be834ab50d743785"],["/static/media/wordmark.56f7a30a.png","56f7a30a0bdd4f27b91266e1f37c91e4"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});